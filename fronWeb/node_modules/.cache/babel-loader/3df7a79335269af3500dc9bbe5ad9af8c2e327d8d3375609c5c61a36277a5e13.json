{"ast":null,"code":"var _jsxFileName = \"/home/antonio/RepoGitHub/Achat_vente-Tovo2/frontend/src/View/Page/Fournisseur/ProformatHavingBcmd.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../Template/Appro/Header\";\nimport ProformatFournisseur from \"../proforma/ProformatFournisseur\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProformatHavingBcmd = () => {\n  _s();\n  const [allProformat, setAllProformat] = useState([]);\n\n  //    Get all proformat which have bon commande inside its details\n  useEffect(() => {\n    var content = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://127.0.0.1:3000/getProformatWithBonCommande\", content).then(response => {\n      return response.json();\n    }).then(json => {\n      setAllProformat(json.allProformat);\n      console.log(allProformat);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), allProformat.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(ProformatFournisseur, {\n        details: element\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/pfBcmd/' + element.idproformat_fournisseur,\n        children: \"D\\xE9tails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(ProformatHavingBcmd, \"jPt7QyWlolzT54KFOQmJfXsbX4c=\");\n_c = ProformatHavingBcmd;\nexport default ProformatHavingBcmd;\nvar _c;\n$RefreshReg$(_c, \"ProformatHavingBcmd\");","map":{"version":3,"names":["React","useEffect","useState","Link","Header","ProformatFournisseur","ProformatHavingBcmd","allProformat","setAllProformat","content","method","headers","fetch","then","response","json","console","log","map","element","index","idproformat_fournisseur"],"sources":["/home/antonio/RepoGitHub/Achat_vente-Tovo2/frontend/src/View/Page/Fournisseur/ProformatHavingBcmd.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../Template/Appro/Header\";\nimport ProformatFournisseur from \"../proforma/ProformatFournisseur\";\n\nconst ProformatHavingBcmd = () => {\n    const [allProformat, setAllProformat] = useState([]);\n\n\n    //    Get all proformat which have bon commande inside its details\n    useEffect(() => {\n      var content = {\n          method : \"GET\",\n          headers : {\n              \"Content-Type\": \"application/json\"\n          },\n      };\n\n      fetch(\"http://127.0.0.1:3000/getProformatWithBonCommande\", content)\n      .then((response)=>{\n          return response.json();\n      })\n      .then((json)=>{\n          setAllProformat(json.allProformat)\n          console.log(allProformat);\n      })\n    }, [])\n    \n\n    return(\n        <React.Fragment>\n            <Header />\n            {allProformat.map( (element,index) =>(\n                <div className=\"container\" key={index}>\n                    <ProformatFournisseur details={element} />\n                    <Link to={'/pfBcmd/'+element.idproformat_fournisseur} >DÃ©tails</Link>\n                </div>\n            ))}\n        </React.Fragment>\n    );\n}\nexport default ProformatHavingBcmd;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,oBAAoB,MAAM,kCAAkC;AAAC;AAEpE,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAGpD;EACAD,SAAS,CAAC,MAAM;IACd,IAAIQ,OAAO,GAAG;MACVC,MAAM,EAAG,KAAK;MACdC,OAAO,EAAG;QACN,cAAc,EAAE;MACpB;IACJ,CAAC;IAEDC,KAAK,CAAC,mDAAmD,EAAEH,OAAO,CAAC,CAClEI,IAAI,CAAEC,QAAQ,IAAG;MACd,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEE,IAAI,IAAG;MACVP,eAAe,CAACO,IAAI,CAACR,YAAY,CAAC;MAClCS,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACI,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACX,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,EACTA,YAAY,CAACW,GAAG,CAAE,CAACC,OAAO,EAACC,KAAK,kBAC7B;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB,QAAC,oBAAoB;QAAC,OAAO,EAAED;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1C,QAAC,IAAI;QAAC,EAAE,EAAE,UAAU,GAACA,OAAO,CAACE,uBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA,GAFzCD,KAAK;MAAA;MAAA;MAAA;IAAA,QAIxC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACW;AAEzB,CAAC;AAAA,GAnCKd,mBAAmB;AAAA,KAAnBA,mBAAmB;AAoCzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}